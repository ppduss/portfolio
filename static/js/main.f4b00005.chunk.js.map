{"version":3,"sources":["Assets/face3.jpg","Portfolio/index.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","App","className","src","face","alt","id","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,sJC0F5BC,EAtFH,WAmFV,OAjFE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OAAOC,IAAKC,IAAMC,IAAI,iBACrC,yBAAKH,UAAU,YACb,yBAAKA,UAAU,aAAf,mBACA,yBAAKA,UAAU,OAAf,gIAKN,yBAAKI,GAAG,gBAER,yBAAKJ,UAAU,qBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,UAAUI,GAAG,QAC3B,yBAAKA,GAAG,WACP,yBAAKJ,UAAU,UAAf,4BACA,yBAAKA,UAAU,YAAf,sGAGF,yBAAKA,UAAU,SACb,sCACA,qCACA,sCACA,qCACA,oCACA,yBAAKA,UAAU,UAAS,uBAAGK,KAAK,mDAAR,cACxB,yBAAKL,UAAU,UAAS,uBAAGK,KAAK,mDAAR,qBAG5B,yBAAKL,UAAU,SACb,yBAAKA,UAAU,cACb,sCACA,qCACA,sCACA,wCACA,yBAAKA,UAAU,UAAS,uBAAGK,KAAK,sCAAR,cACxB,yBAAKL,UAAU,UAAS,uBAAGK,KAAK,+CAAR,oBAE1B,yBAAKL,UAAU,UAAUI,GAAG,UAC3B,yBAAKA,GAAG,aACN,yBAAKJ,UAAU,UAAf,qBACD,yBAAKA,UAAU,YAAf,sIAIJ,yBAAKA,UAAU,SACb,yBAAKA,UAAU,UAAUI,GAAG,WAC1B,uBAAGC,KAAK,+BAA+BD,GAAG,YAC1C,yBAAKJ,UAAU,UAAf,aACA,yBAAKA,UAAU,YAAf,0CAGF,yBAAKA,UAAU,SACb,sCACA,qCACA,sCACA,qCACC,yBAAKA,UAAU,UAAS,uBAAGK,KAAK,gCAAR,gBACzB,yBAAKL,UAAU,UAAS,uBAAGK,KAAK,qCAAR,qBAG5B,yBAAKL,UAAU,SACf,yBAAKA,UAAU,cACX,gDACA,gDACD,yBAAKA,UAAU,UAAS,uBAAGK,KAAK,sCAAR,eAE3B,yBAAKL,UAAU,UAAUI,GAAG,SAC1B,yBAAKA,GAAG,YACN,yBAAKJ,UAAU,UAAf,2BACA,yBAAKA,UAAU,YAAf,qFAIJ,yBAAKA,UAAU,UAAf,yBCtEYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f4b00005.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face3.d5363c65.jpg\";","import React from 'react';\nimport './Portfolio.scss';\nimport face from '../Assets/face3.jpg';\n\nconst App = () => {\n  const Main = (\n    <div className=\"main_container\">\n      <div className=\"header_container\">\n        <div className=\"header_content\">\n          <img className=\"face\" src={face} alt=\"profile shot\" />\n          <div className=\"text_box\">\n            <div className=\"greetings\">Hi, I'm Patrick</div>\n            <div className=\"iam\">I'm a front-end developer living in Montr√©al. I love creating beautiful and engaging websites built with elegant code.</div>\n          </div>\n        </div>\n      </div>\n      {/* <div id=\"transition1\"></div> */}\n      <div id=\"transition2\"></div>\n      {/* <div id=\"transition3\"></div> */}\n      <div className=\"project_container\">\n        <div className=\"block\">\n          <div className=\"project\" id=\"Mars\">\n           <div id=\"marsBox\">\n            <div className=\"title \">The Mars Weather Network</div>\n            <div className=\"subtitle\">A weather report of the last seven available Sols (Martian days) using on data of two NASA APIs.</div>\n            </div>\n          </div>\n          <div className=\"tools\" >\n            <div>React</div>\n            <div>SCSS</div>\n            <div>HTML5</div>\n            <div>Grid</div>\n            <div>API</div>\n            <div className=\"button\"><a href=\"https://ppduss.github.io/TheMarsWeatherNetwork/\">View live</a></div>\n            <div className=\"button\"><a href=\"https://github.com/ppduss/TheMarsWeatherNetwork\">View on GitHub</a></div>\n          </div>\n        </div>\n        <div className=\"block\">\n          <div className=\"tools even\">\n            <div>React</div>\n            <div>CSS3</div>\n            <div>HTML5</div>\n            <div>Flexbox</div>\n            <div className=\"button\"><a href=\"https://combustionphotography.com/\">View live</a></div>\n            <div className=\"button\"><a href=\"https://github.com/ppduss/Coffee-Prescriber\">View on GitHub</a></div>\n          </div>\n          <div className=\"project\" id=\"Coffee\">\n           <div id=\"coffeeBox\">\n             <div className=\"title \">Coffee Prescriber</div>\n            <div className=\"subtitle\">A playful app that helps gauge your happiness to productivity ratio as your drink coffee and wether it's wise to keep drinking.</div>\n          </div>\n        </div>\n        </div>\n        <div className=\"block\">\n          <div className=\"project\" id=\"Ratatap\">\n            <a href=\"https://youtu.be/OX1kVVcx0Xw\" id=\"photoBox\">\n            <div className=\"title \"> Ratatap </div>\n            <div className=\"subtitle\">A clone of the patatap.com drum pads</div>\n            </a>\n          </div>\n          <div className=\"tools\">\n            <div>tesrt</div>\n            <div>CSS3</div>\n            <div>HTML5</div>\n            <div>test</div>\n             <div className=\"button\"><a href=\"https://youtu.be/OX1kVVcx0Xw\">Watch Video</a></div>\n            <div className=\"button\"><a href=\"https://github.com/ppduss/Ratatap\">View on GitHub</a></div>\n          </div>\n        </div>\n        <div className=\"block\">\n        <div className=\"tools even\">\n            <div>Adobe Lightroom</div>\n            <div>Adobe Portfolio</div>\n           <div className=\"button\"><a href=\"https://combustionphotography.com/\">View live</a></div>\n        </div>\n        <div className=\"project\" id=\"Photo\">\n          <div id=\"photoBox\">\n            <div className=\"title \"> Combustion Photography</div>\n            <div className=\"subtitle\">Photography portfolio made exclusively with Adobe Creative Cloud applications.</div>\n          </div>\n          </div>\n        </div>\n        <div className=\"footer\">This is the footer</div>\n      </div>\n   </div>\n  )\n\n  return Main\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Portfolio from './Portfolio/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Portfolio />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}